#[derive(Debug, PartialEq, Eq)]
pub enum Token {
    Eof,

    // punctuators https://tc39.es/ecma262/#sec-punctuators
    LeftBrace,               // `{`
    RightBrace,              // `{`
    LeftParen,               // `(`
    RightParen,              // `)`
    LeftBracket,             // `[`
    RightBracket,            // `]`
    Dot,                     // `.`
    DotDotDot,               // `...`
    Semicolon,               // `;`
    Comma,                   // `,`
    LessThan,                // `<`
    GreaterThan,             // `>`
    LessThanEqual,           // `<=`
    GreaterThanEqual,        // `>=`
    DoubleEqual,             // `==`
    NotDoubleEqual,          // `!=`
    TripleEqual,             // `===`
    NotTripleEqual,          // `!==`
    Plus,                    // `+`
    Minus,                   // `-`
    Multiply,                // `*`
    Division,                // `/`
    Percent,                 // `%`
    Exponentiation,          // `**`
    PlusPlus,                // `++`
    MinusMinus,              // `--`
    LeftShift,               // `<<`
    RightShift,              // `>>`
    UnsignedRightShift,      // `>>>`
    BitwiseAnd,              // `&`
    BitwiseOr,               // `|`
    BitwiseXor,              // `^`
    Bang,                    // `!`
    BitwiseNot,              // `~`
    LogicalAnd,              // `&&`
    LogicalOr,               // `||`
    NullishCoalescing,       // `??`
    QuestionMark,            // `?`
    Colon,                   // `:`
    Equal,                   // `=`
    PlusEqual,               // `+=`
    MinusEqual,              // `-=`
    MultiplyEqual,           // `*=`
    DivisionEqual,           // `/=`
    RemainderEqual,          // `%=`
    ExponentiationEqual,     // `**=`
    LeftShiftEqual,          // `<<=`
    RightShiftEqual,         // `>>=`
    UnsignedRightShiftEqual, // `>>>=`
    BitwiseAndEqual,         // `&=`
    BitwiseOrEqual,          // `|=`
    BitwiseXorEqual,         // `^=`
    LogicalAndEqual,         // `&&=`
    LogicalOrEqual,          // `||=`
    NullishCoalescingEqual,  // `??=`
    Arrow,                   // `=>`
}
